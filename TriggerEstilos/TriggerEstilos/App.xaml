<Application x:Class="TriggerEstilos.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TriggerEstilos"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="MiBoton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                            <Border x:Name="FiguraSobreBoton"
                                BorderThickness="1" 
                                Background="#7FC8A0B4"
                                BorderBrush="#FFB40F46" 
                                CornerRadius="1.5">
                                <TextBlock Text="btn" Foreground="#FF3C0514" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="12"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="FiguraSobreBoton" Property="BorderThickness" Value="2" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.050" To="27" Storyboard.TargetProperty="Height"/>
                                            <DoubleAnimation Duration="0:0:0.050" To="67" Storyboard.TargetProperty="Width"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.050" To="30" Storyboard.TargetProperty="Height"/>
                                            <DoubleAnimation Duration="0:0:0.050" To="70" Storyboard.TargetProperty="Width"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontFamily" Value="Consolas"/>

            <Style.Triggers>

            </Style.Triggers>
        </Style>
        
        <!--Estilo para TextBox-->
        <Style x:Key="MiTextBox" TargetType="TextBox">

            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.100" To="1.5" Storyboard.TargetProperty="BorderThickness"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.100" To="1" Storyboard.TargetProperty="BorderThickness"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>

            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="#FF3C0514"/>
            <Setter Property="Background" Value="#33C8A0B4"/>
            <Setter Property="BorderBrush" Value="#FFB40F46"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!--Estilo para PasswordBox-->
        <Style x:Key="MiPasswordBox" TargetType="PasswordBox">

            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.100" To="1.5" Storyboard.TargetProperty="BorderThickness"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.100" To="1" Storyboard.TargetProperty="BorderThickness"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>

            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="#FF3C0514"/>
            <Setter Property="Background" Value="#33C8A0B4"/>
            <Setter Property="BorderBrush" Value="#FFB40F46"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!--Estilo para ComboBox-->
        <Style x:Key="MiComboBox" TargetType="ComboBox">
            <!--<Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.100" To="1.5" Storyboard.TargetProperty="BorderThickness"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.100" To="1" Storyboard.TargetProperty="BorderThickness"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>-->

            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="#FF3C0514"/>
            <Setter Property="Background" Value="#33C8A0B4"/>
            <Setter Property="BorderBrush" Value="#FFB40F46"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!--Estilo para Label-->
        <Style x:Key="MiLabel" TargetType="Label">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="#FF3C0514"/>
        </Style>

        <!--Estilo para TextBlock-->
        <Style x:Key="MiTextBlock" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="#FF3C0514"/>
        </Style>

        <!--Estilo para RadioButton-->
        <Style x:Key="MiRadioButton" TargetType="RadioButton">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="#FF3C0514"/>
        </Style>

        <!--Estilo para CheckBox-->
        <Style x:Key="MiCheckBox" TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="#FF3C0514"/>
        </Style>
















        <Style x:Key="PurpleStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="Purple"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="Yellow" Offset="0.0" />
                        <GradientStop Color="Red" Offset="0.25" />
                        <GradientStop Color="Blue" Offset="0.75" />
                        <GradientStop Color="LimeGreen" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="OtroButtonStyle" TargetType="Button"
           BasedOn="{StaticResource PurpleStyle}">
            <Setter Property="BorderBrush" Value="Blue" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Foreground" Value="Green" />
        </Style>-->

        <ControlTemplate x:Key="MiBoton2" TargetType="Button">
            <Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState Name="Normal">
                            <Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:1.050" To="30" Storyboard.TargetName="formaElipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" AutoReverse="True"/>
                                    <DoubleAnimation Duration="0:0:1.050" To="70" Storyboard.TargetName="formaElipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" AutoReverse="True"/>
                                </Storyboard>
                            </Storyboard>
                        </VisualState>
                        <VisualState Name="Pressed">
                            <Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.050" To="27" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" AutoReverse="True"/>
                                    <DoubleAnimation Duration="0:0:0.050" To="67" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" AutoReverse="True"/>
                                </Storyboard>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Ellipse x:Name="formaElipse" 
                    Fill="{TemplateBinding Background}" 
                    Stroke="{TemplateBinding Foreground}" >
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <ContentPresenter x:Name="contentPresenter" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"
                                  TextBlock.Foreground="Aquamarine"/>
            </Grid>
        </ControlTemplate>
    </Application.Resources>
</Application>
